ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180 / ZX-Next / eZ80), page 1.
Hexadecimal [16-Bits]



                              1 ;--------------------------------------------------------------------------
                              2 ;  crt0.s - Generic crt0.s for a Z80
                              3 ;
                              4 ;  Copyright (C) 2000, Michael Hope
                              5 ;
                              6 ;  This library is free software; you can redistribute it and/or modify it
                              7 ;  under the terms of the GNU General Public License as published by the
                              8 ;  Free Software Foundation; either version 2, or (at your option) any
                              9 ;  later version.
                             10 ;
                             11 ;  This library is distributed in the hope that it will be useful,
                             12 ;  but WITHOUT ANY WARRANTY; without even the implied warranty of
                             13 ;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
                             14 ;  GNU General Public License for more details.
                             15 ;
                             16 ;  You should have received a copy of the GNU General Public License 
                             17 ;  along with this library; see the file COPYING. If not, write to the
                             18 ;  Free Software Foundation, 51 Franklin Street, Fifth Floor, Boston,
                             19 ;   MA 02110-1301, USA.
                             20 ;
                             21 ;  As a special exception, if you link this library with other files,
                             22 ;  some of which are compiled with SDCC, to produce an executable,
                             23 ;  this library does not by itself cause the resulting executable to
                             24 ;  be covered by the GNU General Public License. This exception does
                             25 ;  not however invalidate any other reasons why the executable file
                             26 ;   might be covered by the GNU General Public License.
                             27 ;--------------------------------------------------------------------------
                             28 
                             29 	.module crt0
                             30 	.globl	_main
                             31 	.globl    l__INITIALIZER
                             32     .globl    s__INITIALIZER
                             33     .globl    s__INITIALIZED
                             34     .globl  _nmi_handler
                             35 
                             36 	.area	_HEADER (ABS)
                             37 	;; Reset vector
   0000                      38 	.org 	0
   0000 C3 00 01      [10]   39 	jp	init
                             40 
   0008                      41 	.org	0x08
   0008 ED 4D         [14]   42 	reti
   0010                      43 	.org	0x10
   0010 ED 4D         [14]   44 	reti
   0018                      45 	.org	0x18
   0018 ED 4D         [14]   46 	reti
   0020                      47 	.org	0x20
   0020 ED 4D         [14]   48 	reti
   0028                      49 	.org	0x28
   0028 ED 4D         [14]   50 	reti
   0030                      51 	.org	0x30
   0030 ED 4D         [14]   52 	reti
   0038                      53 	.org	0x38
   0038 ED 4D         [14]   54 	reti
                             55 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180 / ZX-Next / eZ80), page 2.
Hexadecimal [16-Bits]



                             56 	; NMI handler
   0066                      57 	.org	0x66
   0066 C3 00 00      [10]   58 	jp		_nmi_handler	
                             59 
   0100                      60 	.org	0x100
                             61 
   0100                      62 init:
                             63 
                             64 
                             65 	; Small delay.  Not sure why, but helps boot work after
                             66 	; FPGA direct programming
   0100 06 40         [ 7]   67 	ld      B,#0x40
   0102                      68 1$:
   0102 10 FE         [13]   69 	djnz	1$
                             70 
                             71 	;; Set stack pointer
   0104 31 00 80      [10]   72 	ld	sp,#0x8000
                             73 
                             74 	;; Initialise global variables
   0107 CD 00 00      [17]   75 	call	gsinit
                             76 
                             77 	;; Go...
   010A CD 00 00      [17]   78 	call	_main
                             79 
                             80 	;; Should never get here
   010D                      81 2$:
   010D 18 FE         [12]   82 	jr 		2$
                             83 
                             84 	;; Ordering of segments for the linker.
                             85 	.area	_HOME
                             86 	.area	_CODE
                             87 	.area	_INITIALIZER
                             88 	.area   _GSINIT
                             89 	.area   _GSFINAL
                             90 
                             91 	.area	_DATA
                             92 	.area	_INITIALIZED
                             93 	.area	_BSEG
                             94 	.area   _BSS
                             95 	.area   _HEAP
                             96 
                             97 	.area   _CODE
                             98 
                             99 	.area   _GSINIT
   0000                     100 gsinit::
   0000 01 00 00      [10]  101 	ld	bc, #l__INITIALIZER
   0003 78            [ 4]  102 	ld	a, b
   0004 B1            [ 4]  103 	or	a, c
   0005 28 08         [12]  104 	jr	Z, gsinit_next
   0007 11 00 00      [10]  105 	ld	de, #s__INITIALIZED
   000A 21 00 00      [10]  106 	ld	hl, #s__INITIALIZER
   000D ED B0         [21]  107 	ldir
   000F                     108 gsinit_next:
                            109 
                            110 	.area   _GSFINAL
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180 / ZX-Next / eZ80), page 3.
Hexadecimal [16-Bits]



   0000 C9            [10]  111 	ret
                            112 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180 / ZX-Next / eZ80), page 4.
Hexadecimal [16-Bits]

Symbol Table

    .__.$$$.=  2710 L   |     .__.ABS.=  0000 G   |     .__.CPU.=  0000 L
    .__.H$L.=  0000 L   |     _main      **** GX  |     _nmi_han   **** GX
  E gsinit     0000 GR  |   E gsinit_n   000F R   |   B init       0100 R
    l__INITI   **** GX  |     s__INITI   **** GX  |     s__INITI   **** GX

ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180 / ZX-Next / eZ80), page 5.
Hexadecimal [16-Bits]

Area Table

   0 _CODE      size    0   flags    0
   1 _HEADER    size    0   flags    8
   2 _HEADER0   size    3   flags    8
   3 _HEADER1   size    2   flags    8
   4 _HEADER2   size    2   flags    8
   5 _HEADER3   size    2   flags    8
   6 _HEADER4   size    2   flags    8
   7 _HEADER5   size    2   flags    8
   8 _HEADER6   size    2   flags    8
   9 _HEADER7   size    2   flags    8
   A _HEADER8   size    3   flags    8
   B _HEADER9   size    F   flags    8
   C _HOME      size    0   flags    0
   D _INITIAL   size    0   flags    0
   E _GSINIT    size    F   flags    0
   F _GSFINAL   size    1   flags    0
  10 _DATA      size    0   flags    0
  11 _INITIAL   size    0   flags    0
  12 _BSEG      size    0   flags    0
  13 _BSS       size    0   flags    0
  14 _HEAP      size    0   flags    0

